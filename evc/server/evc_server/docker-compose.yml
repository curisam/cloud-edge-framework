#-----------------------------------------
#                실행 방법
#-----------------------------------------
#
# 1. 홈 위치에 .evc 폴더를 만듭니다. 
#    mkdir ~/.evc
#
# 2. 도커 컴포즈를 실행합니다.
#    docker compose up
#
#-----------------------------------------

# JPark @ KETI, 2024
services:
    nginx:
        image: nginx
        ports:
            - 81:80
        volumes:
            - ./web:/var/www/html
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
        networks:
            - dev_network
            
    mariadb:
        image: mariadb:latest    
        ports:
            #- ${IP}:3300:3306 # 보안 강력 (실제 서비스에 적용) 
            - 3306:3306 # 임시로 '${IP}:' 헤더를 제거
        #command: "mysqld --init-file /data/application/init.sql"
        volumes:
            - ~/.evc/mariadb:/var/lib/mysql # maridadb data
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${DB_NAME}"
            MYSQL_USER: "${DB_USER}"
            MYSQL_PASSWORD: "${DB_USER_PASSWORD}"
            TZ: Asia/Seoul
        networks:
            - dev_network
           
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            PMA_HOST: mariadb
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: "${DB_USER_PASSWORD}"
        ports:
            #- ${IP}:8000:80 # 보안 강력 (실제 서비스에 적용)
            - 8000:80 # 임시
        networks:
            - dev_network

            
    php:
        build:
            context: ./config/php
        ports:
            - 9000:9000
        volumes:
            - ./web:/var/www/html
            - ./config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
        command: bash -c "docker-php-ext-install pdo pdo_mysql && docker-php-entrypoint php-fpm" # 동적으로 확장모듈 설치
        environment:
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_USER_PASSWORD}
        depends_on:
            - mariadb
        networks:
            - dev_network
 

 

networks:
    dev_network:
        driver: bridge




